<!--In order to get existing data to display you have to working with the article model from the beginning-->
<!--This allows rails to see the model, find the id, and pre-fill the info for us-->
<!--Putting the form_with in this format allows rails to generate the url needed to access the rails routes-->
<div class="container">
  <div class="row justify-content-center">
    <div class="col-10">
<!--      Here you define what obj would be when rendered -->
      <%= render 'shared/errors', obj: @article %>
      <%= form_with(model: @article, class: "shadow p-3 mb-3 bg-info rounded", local: true) do |f| %>
        <div class="form-group row">
          <%= f.label :title, class: "col-2 col-form-label text-light" %>
          <div class="col-10">
            <%= f.text_field :title, class: "form-control p-3 mb-3 shadow rounded", placeholder: "Title of Article" %>
          </div>
        </div>

        <div class="form-group row">
          <%= f.label :description, class: "col-2 col-form-label text-light" %>
          <div class="col-10">
            <!--      you can add rows to indicate how tall you want your field to be-->
            <%= f.text_area :description, rows: 10, class: "form-control p-3 mb-3 shadow rounded", placeholder: "Description of Article" %>
          </div>
        </div>

        <div class="form-group row">
          <%= f.label :category, class: "col-2 col-form-label text-light" %>
          <div class="col-10">
            <!--      you can add rows to indicate how tall you want your field to be-->
            <%= f.collection_select(:category_ids, Category.all, :id, :name,
                                    { prompt: "Select a Category (Can Be Empty)"}, { multiple: true, size: 3, class: "custom-select form-control p-1 mb-1 shadow rounded" }) %>
          </div>
        </div>

        <div class="form-group row justify-content-center mt-4">
          <%= f.submit class: "btn btn-outline-light btn-lg col-3" %>
        </div>

      <% end %>
      <div class="mb-3">
      <%= link_to '[ Cancel and Go Back ]', articles_path, class: "text-info" %>
      </div>
    </div>
  </div>
</div>


<!--On the old create new article-->
<!--reference ruby form helpers-->
<!--Form_with is the main helper form -->
<!--First provide the model referenced by scope: :article is the model name -->
<!--The url is where you are specifying where you are sending the article to (articles_path == /articles in url)-->
<!--local is the way to post the article: only have to use if you are using form_with-->
<%#= form_with scope: :article, url: articles_path, local: true do |f| %>
<!--  <p>-->
    <%#= f.label :title %>
<!--    <br>-->
    <%#= f.text_field :title %>
<!--  </p>-->
<!--  <p>-->
    <%#= f.label :description %>
<!--    <br>-->
    <%#= f.text_area :description %>
<!--  </p>-->
<!--  <p>-->
    <%#= f.submit %>
<!--  </p>-->
<%# end %>